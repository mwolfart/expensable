datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  email         String @unique
  fullName      String

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  password      String
  refreshTokens RefreshToken[]

  categories    Category[]
  expenses      Expense[]
  transactions  Transaction[]
}

model RefreshToken {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  hashedToken String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String   @db.ObjectId
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Category {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  title     String @unique
  expenses  CategoriesOnExpense[]
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
}

model Expense {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  amount        Float
  unit          Float
  datetime      DateTime
  categories    CategoriesOnExpense[]
  transactions  ExpensesInTransaction[]
  user          User     @relation(fields: [userId], references: [id])
  userId        String   @db.ObjectId
}

model Transaction {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  datetime      DateTime
  location      String
  expenses      ExpensesInTransaction[]
  user          User     @relation(fields: [userId], references: [id])
  userId        String   @db.ObjectId
}

model CategoriesOnExpense {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  expense       Expense @relation(fields: [expenseId], references: [id])
  expenseId     String @db.ObjectId
  category      Category @relation(fields: [categoryId], references: [id])
  categoryId    String @db.ObjectId
  @@unique([expenseId, categoryId])
}

model ExpensesInTransaction {
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  expense          Expense @relation(fields: [expenseId], references: [id])
  expenseId        String @db.ObjectId
  transaction      Transaction @relation(fields: [transactionId], references: [id])
  transactionId    String @db.ObjectId
  @@unique([expenseId, transactionId])
}